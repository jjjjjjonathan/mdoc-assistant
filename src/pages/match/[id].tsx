import type { NextPage } from "next";
import { useRouter } from "next/router";
import Head from "next/head";
import { api } from "~/utils/api";
import Roster from "~/components/Roster";

const MatchPage: NextPage = () => {
  const { id } = useRouter().query;
  const matchId = id ? (!Number.isNaN(+id) ? +id : 0) : undefined;
  const { data, isLoading } = api.matches.getUniqueMatch.useQuery({
    matchId: matchId || 0,
  });

  if (isLoading) return <p>LOADING</p>;
  if (!data) return <p>something went wrong</p>;

  return (
    <>
      <Head>
        <title>
          {data.homeTeam.name} vs. {data.awayTeam.name}
        </title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <h1 className="text-4xl font-bold">
        {data.homeTeam.name} vs. {data.awayTeam.name}
      </h1>
      <p>
        score is:{" "}
        {data.goals.filter((goal) => goal.teamId === data.homeTeamId).length} -{" "}
        {data.goals.filter((goal) => goal.teamId === data.awayTeamId).length}
      </p>
      <Roster rosterUrl={data.homeTeam.rosterUrl} />
      {/* <Roster rosterUrl={data.awayTeam.rosterUrl} /> */}
    </>
  );
};

export default MatchPage;
